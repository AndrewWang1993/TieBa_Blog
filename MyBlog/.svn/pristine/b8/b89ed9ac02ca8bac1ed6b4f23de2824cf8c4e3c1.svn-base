package com.mct.utils;

import java.io.File;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;

/**
 * 接收上传文件并保存
 * 
 * @author Whunf
 * 
 */
public class UploadUtil {

	/**
	 * 
	 * @param req
	 * @param savePath
	 *            保存路径，如：D:/blog/photo/
	 * @param saveName
	 *            保存文件名，如：acb.jpg(后缀可以省略)
	 * @return
	 */
	public static boolean saveFile(HttpServletRequest req, String savePath,
			String saveName) {
		try {
			// final String appRealPath = "D:\\upload_test\\"; // app的物理路径
			final long MAX_SIZE = 3 * 1024 * 1024;// 设置上传文件最大为 3M
			// 实例化一个硬盘文件工厂,用来配置上传组件ServletFileUpload
			DiskFileItemFactory dfif = new DiskFileItemFactory();
			dfif.setSizeThreshold(4096);// 设置上传文件时用于临时存放文件的内存大小,这里是4K.多于的部分将临时存在硬盘
			dfif.setRepository(new File(savePath + "temp\\"));
			// 设置存放临时文件的目录,web根目录下的ImagesUploadTemp目录
			// 用以上工厂实例化上传组件
			ServletFileUpload sfu = new ServletFileUpload(dfif);

			sfu.setSizeMax(MAX_SIZE);// 设置最大上传尺寸

			// 从request得到 所有 上传域的列表
			List<FileItem> fileList = sfu.parseRequest(req);
			// 得到所有上传的文件
			Iterator<FileItem> fileItr = fileList.iterator();
			// 循环处理所有文件
			while (fileItr.hasNext()) {
				FileItem fileItem = null;
				// 得到当前文件
				fileItem = (FileItem) fileItr.next();
				// 忽略简单form字段而不是上传域的文件域(<input type="text" />等)
				if (fileItem == null || fileItem.isFormField()) {
					continue;
				}
				String u_name = savePath + saveName;
				// 保存文件
				fileItem.write(new File(u_name));
			}
			return true;
		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
	}
}
